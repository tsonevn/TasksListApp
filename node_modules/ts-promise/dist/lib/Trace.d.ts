import Stack from "./Stack";
/**
 * Stack trace container with optional source traces.
 *
 * Typically used for capturing traces across asynchronous calls (e.g.
 * with Promises or Events).
 */
export default class Trace {
    stack: Stack;
    sources: Stack[];
    constructor(ignoreUntil?: Function);
    static traceLimit: number;
    /**
     * Assign another Trace as the source of this Trace.
     *
     * Note: the stack of `source` is copied to this Trace, in order to allow
     * truncating the trace length to `Trace.traceLimit` to prevent memory
     * exhaustion on e.g. recursive traces.
     *
     * @param source Trace to use as source.
     */
    setSource(source: Trace): void;
    inspect(): string;
}
